{% use '../CommonAdmin/EditAction/index.php.twig' %}
{% use '../CommonAdmin/EditAction/update.php.twig' %}
{% use '../CommonAdmin/security_action.php.twig' %}
{% use '../CommonAdmin/version_lock.php.twig' %}
<?php

namespace Admingenerated\{{ namespace_prefix }}{{ bundle_name }}\{{ builder.generator.GeneratedControllerFolder }};

use {{ builder.generator.baseController }} as BaseController;
use Symfony\Component\HttpFoundation\RedirectResponse;

{% block orm_use %}{% endblock %}

{{- block('index_use') -}}

{{- block('update_use') -}}

{{- block('security_use') }}

class EditController extends BaseController
{
    {{- block('index') -}}

    {{- block('update') -}}

    {{- block('security_check_with_object') }}

    protected function getEditType()
    {
        $type = new EditType();
        $type->setSecurityContext($this->get('security.context'));

        return $type;
    }


    /**
     * Get additional parameters for rendering.
     *
     * @param \{{ model }} ${{ builder.ModelClass }} your \{{ model }} object
     * return array
     **/
    protected function getAdditionalRenderParameters(\{{ model }} ${{ builder.ModelClass }})
    {
        return array();
    }

    {% block getObject -%}
    protected function getObject($pk)
    {
        //ORM do JOB
    }
    {% endblock %}

    {% block saveObject -%}
    protected function saveObject(\{{ model }} ${{ builder.ModelClass }})
    {
        //ORM do JOB
    }
    {% endblock %}
    

    protected function getObjectVersions()
    {
        return $this->get('session')->get('{{ namespace_prefix }}\{{ bundle_name }}\{{ builder.BaseGeneratorName }}Edit\Versions', array());
    }

    protected function setObjectVersions($versions = array())
    {
        $this->get('session')->set('{{ namespace_prefix }}\{{ bundle_name }}\{{ builder.BaseGeneratorName }}Edit\Versions', $versions);
    }
    
    protected function lockObjectVersion($pk, $version)
    {
        $versions = $this->getObjectVersions();
        $versions[$pk] = $version;
        $this->setObjectVersions($versions);
    }

}
